name: Validate Main

on:
  # Triggers the workflow on push or pull request events for the master branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install npm 7
        run: |
          npm install -g npm@7
          npm --version

      - name: Run makefile
        run: |
          sudo make install_apt_deps
          make get_nfpm
          make all

      - name: Store built packages
        uses: actions/upload-artifact@v2
        with:
          name: colte-package
          path: BUILD/colte_*.deb

  package-install:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get previously built package
        uses: actions/download-artifact@v2
        with:
          name: colte-package

      - name: Add CoLTE public repo
        run: |
          echo "deb [signed-by=/usr/share/keyrings/colte-archive-keyring.gpg] http://colte.cs.washington.edu $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/colte.list
          sudo wget -O /usr/share/keyrings/colte-archive-keyring.gpg http://colte.cs.washington.edu/colte-archive-keyring.gpg
          sudo add-apt-repository ppa:open5gs/latest
          sudo apt-get update

      - name: Install CoLTE Package
        run: |
          sudo dpkg -i colte_*.deb || /bin/true
          sudo apt-get install --yes -f

  run-tests:
    runs-on: ubuntu-latest
    services:
      postgresql:
        image: postgres:latest
        ports:
          - 5432
        env:
          # POSTGRES_USER: haulage_db
          POSTGRES_PASSWORD: haulage_db
          # POSTGRES_DATABASE: haulage_db
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install npm 7
        run: |
          npm install -g npm@7
          npm --version

      - name: Run tests
        env:
          DB_HOST: "127.0.0.1"
          DB_PORT: ${{ job.services.postgresql.ports[5432] }}
          DB_USER: "postgres"
          DB_PASSWORD: "haulage_db"
          DB_NAME: "postgres"
          TRANSACTION_LOG: "transaction_log.txt"
        run: |
          touch webgui/transaction_log.txt
          make test
