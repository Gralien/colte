---
  - name: apt-get update
    apt:
      update_cache: yes
      cache_valid_time: 3600
    become: yes

  - name: apt-get install build dependencies
    apt:
      name: "{{ item }}"
    with_items:
    - autoconf
    - automake
    - bison
    - build-essential
    - cmake
    - cmake-curses-gui
    - doxygen
    - doxygen-gui
    - flex
    - pkg-config
    - git
    - libconfig-dev
    - libgcrypt11-dev
    - libidn2-0-dev
    - libidn11-dev
    - default-libmysqlclient-dev
    - libpthread-stubs0-dev
    - libsctp1
    - libsctp-dev
    - libssl-dev
    - libtool
    - openssl
    - nettle-dev
    - nettle-bin
    - php
    - python-pexpect
    - castxml
    - guile-2.0-dev
    - libgmp-dev
    - libhogweed?
    - libgtk-3-dev
    - libxml2
    - libxml2-dev
    - mscgen
    - check
    - python
    - libgnutls28-dev
    - python-dev
    - unzip
    - libmnl-dev
    become: yes

########### switch on build_libraries to decide whether we install built libs or apt-get them
  - name: apt-get install custom dependencies
    apt:
      name: "{{ item }}"
    with_items:
    - colte-freediameter
    - colte-liblfds
    - colte-libgtpnl
    - colte-asn1c
    become: yes
    when: build_libraries is not defined

  - name: install EPC from built .debs
    apt: 
      deb: "{{ package_dir }}/libraries/{{ item }}"
    become: yes
    when: build_libraries is defined
    with_items:
    - freediameter.deb
    - asn1c.deb
    - gtpnl.deb
    - lfds.deb
################### switch ends here

  - name: build epc 
    shell: |
      source oaienv
      ./scripts/build_hss -c
      ./scripts/build_mme -c
      ./scripts/build_spgw -c
    args:
      chdir: "{{ epc_dir }}"

  - name: ensure /usr/bin destination directories exist for packaging
    file:
      path: "{{ package_dir }}/{{ item }}/usr/bin/"
      state: directory
      mode: 0755
    with_items:
    - hss
    - mme
    - spgw

  - name: copy binaries for packaging
    copy: 
      src: "{{ item.src }}"
      dest: "{{ item.dst }}"
      force: yes
      mode: 0755
      owner: root
      group: root
    with_items:
    - {src: "/usr/local/bin/oai_hss", dst: "{{ package_dir }}/hss/usr/bin/oai_hss"}
    - {src: "/usr/local/bin/mme", dst: "{{ package_dir }}/mme/usr/bin/mme"}
    - {src: "/usr/local/bin/spgw", dst: "{{ package_dir }}/spgw/usr/bin/spgw"}
    become: yes

  - name: delete binaries out of /usr/local/bin/
    file: 
      path: "{{ item.path }}"
      state: absent
    with_items:
    - {path: "/usr/local/bin/oai_hss"}
    - {path: "/usr/local/bin/mme"}
    - {path: "/usr/local/bin/spgw"}
    become: yes

  - name: create .deb files
    shell: |
      dpkg-deb --build db
      dpkg-deb --build hss
      dpkg-deb --build mme
      dpkg-deb --build spgw
      dpkg-deb --build epc
    args:
      chdir: "{{ package_dir }}"
      
  - name: set build_epc variable
    set_fact:
      build_epc: "1"
