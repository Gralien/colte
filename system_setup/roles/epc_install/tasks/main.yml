---
### Branch on build_epc_source TO DETERMINE WHETHER WE INSTALL FROM APT-GET OR THE LOCALLY BUILT .DEB FILES
  - name: add gpg key for our apt repository
    shell: wget -O /etc/apt/trusted.gpg.d/colte.gpg http://colte.cs.washington.edu/keyring.gpg
    become: yes
    when: build_epc_source == '0'

  - name: add our apt repository
    apt_repository:
      repo: "deb http://colte.cs.washington.edu {{ distro }} main"
      state: present
    become: yes
    when: build_epc_source == '0'

  - name: apt-get install EPC
    apt:
      name: colte-epc
    become: yes
    when: build_epc_source == '0'

  - name: install EPC from built .debs
    apt: 
      deb: "{{ package_dir }}/{{ item }}"
    become: yes
    when: build_epc_source == '1'
    with_items:
    - hss.deb
    - mme.deb
    - spgw.deb
    - epc.deb

# {{ epc_dir }}/scripts/hss_db_import 127.0.0.1 {{ username }} {{ mysql_password }} colte_db {{ epc_dir }}/spencer_configs/sample_db.sql
  - name: install sample_db into mysql
    mysql_db:
      login_user: "{{ username }}"
      login_password: "{{ mysql_password }}"
      name: colte_db
      state: import
      target: "{{ epc_dir }}/spencer_configs/bokondini.sql"

#  - name: synchronize customer table with users table (just in case there are errors)
#    shell: "python {{ epc_dir }}/spencer_scripts/synchronize_dbs.py"

  - name: write information to hss.conf
    lineinfile:
      dest: "/usr/local/etc/oai/hss.conf"
      regexp: "{{ item.field }}"
      line: "{{ item.line }}"
      # owner: "{{ username }}"
      # group: "{{ username }}"
      # mode: 0644
    with_items:
    - {field: 'MYSQL_pass', line: 'MYSQL_pass   = "{{ mysql_password }}";'}
    - {field: 'MYSQL_user', line: 'MYSQL_user   = "{{ username }}";'}
    become: yes

  - name: write information to mme.conf
    lineinfile:
      dest: "/usr/local/etc/oai/mme.conf"
      regexp: "{{ item.field }}"
      line: "{{ item.line }}"
    with_items:
    - {field: "MME_INTERFACE_NAME_FOR_S1_MME", line: "        MME_INTERFACE_NAME_FOR_S1_MME         = \"{{ enb_iface }}\";"}
    # SMS: Note that right now we just set it to 0.0.0.0 so that it serves on any address.
    # - {field: "MME_IPV4_ADDRESS_FOR_S1_MME", line: "        MME_IPV4_ADDRESS_FOR_S1_MME         = \"{{ enb_iface_addr }}\";"}
    become: yes

  - name: write information to spgw.conf
    lineinfile:
      dest: "/usr/local/etc/oai/spgw.conf"
      regexp: "{{ item.field }}"
      line: "{{ item.line }}"
    with_items:
    - {field: "SGW_INTERFACE_NAME_FOR_S1U_S12_S4_UP", line: "        SGW_INTERFACE_NAME_FOR_S1U_S12_S4_UP         = \"{{ enb_iface }}\";"}
    - {field: "SGW_IPV4_ADDRESS_FOR_S1U_S12_S4_UP", line: "        SGW_IPV4_ADDRESS_FOR_S1U_S12_S4_UP         = \"{{ enb_iface_addr }}\";"}
    - {field: "PGW_INTERFACE_NAME_FOR_SGI", line: "        PGW_INTERFACE_NAME_FOR_SGI            = \"{{ wan_iface }}\";"}
    - {field: "IPV4_LIST", line: "        IPV4_LIST = (\"{{ lte_subnet }}\");"}
    - {field: 'MYSQL_pass', line: '    MYSQL_pass   = "{{ mysql_password }}";'}
    - {field: 'MYSQL_user', line: '    MYSQL_user   = "{{ username }}";'}
# SMS TODO: THESE VALUES ARE HARD-CODED WE NEED TO SET THEM TO COLTE'S VALUE IF-AND-ONLY-IF BIND OPTION TURNED ON
    - {field: 'DEFAULT_DNS_IPV4_ADDRESS', line: '    DEFAULT_DNS_IPV4_ADDRESS = "192.168.151.1";'}
    - {field: 'DEFAULT_DNS_SEC_IPV4_ADDRESS', line: '    DEFAULT_DNS_SEC_IPV4_ADDRESS = "192.168.151.1";'}
    become: yes

  - name: update spgw_nat script with wan_iface
    lineinfile:
      dest: "/usr/bin/spgw_nat.sh"
      regexp: "{{ item.field }}"
      line: "{{ item.line }}"
    with_items:
    - {field: "-C POSTROUTING -o enp3s0", line: "     iptables -t nat -C POSTROUTING -o {{ wan_iface }} -j MASQUERADE"}
    - {field: "-A POSTROUTING -o enp3s0", line: "     iptables -t nat -A POSTROUTING -o {{ wan_iface }} -j MASQUERADE"}
    - {field: "-C FORWARD -i gtp0 -o enp3s0", line: "     iptables -C FORWARD -i gtp0 -o {{ wan_iface }} -j ACCEPT"}
    - {field: "-A FORWARD -i gtp0 -o enp3s0", line: "     iptables -A FORWARD -i gtp0 -o {{ wan_iface }} -j ACCEPT"}
    - {field: "-C FORWARD -i enp3s0 ", line: "     iptables -C FORWARD -i {{ wan_iface }} -o gtp0 -m state --state RELATED,ESTABLISHED -j ACCEPT"}
    - {field: "-A FORWARD -i enp3s0 ", line: "     iptables -A FORWARD -i {{ wan_iface }} -o gtp0 -m state --state RELATED,ESTABLISHED -j ACCEPT"}
    become: yes

  - name: dynamically write tcpdump.service file
    lineinfile:
      dest: "{{ epc_dir }}/spencer_scripts/tcpdump.service"
      regexp: "{{ item.field }}"
      line: "{{ item.line }}"
    with_items:
    - {field: 'ExecStart', line: "ExecStart=/usr/sbin/tcpdump -i {{ enb_iface_addr }} -w '/var/log/colte/tcpdump/sctp_${TCPDUMP_FORMAT}.pcap' sctp"}

  - name: copy tcpdump.service file to /etc/systemd/system
    copy: 
      src: "{{ epc_dir }}/spencer_scripts/{{ item }}.service"
      dest: "/etc/systemd/system/{{ item }}.service"
      mode: 0644
    become: yes
    with_items:
    - "tcpdump"

#  - name: enable epc service
#    systemd:
#      daemon_reload: yes
#      name: epc
#      enabled: yes
#    become: yes
